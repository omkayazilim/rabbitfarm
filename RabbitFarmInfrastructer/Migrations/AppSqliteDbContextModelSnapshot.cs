// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RabbitFarmInfrastructer.SqlIteProvider;

#nullable disable

namespace RabbitFarmInfrastructer.Migrations
{
    [DbContext(typeof(AppSqliteDbContext))]
    partial class AppSqliteDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.5");

            modelBuilder.Entity("RabbitFarm.Domain.Entities.Animals", b =>
                {
                    b.Property<long>("AnimalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AnimalSexType")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AnimalStatus")
                        .HasColumnType("INTEGER");

                    b.Property<string>("AnimalType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("InseminationDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsRemoved")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PregnantCount")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("UpdatetdDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatetdUser")
                        .HasColumnType("TEXT");

                    b.HasKey("AnimalId");

                    b.ToTable("T_Animals");
                });

            modelBuilder.Entity("RabbitFarm.Domain.Entities.AppDimensions", b =>
                {
                    b.Property<long>("DimensionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AnimalType")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<TimeSpan>("AppLifeTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("AppStatus")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsRemoved")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaxDoBornCount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaxDoPerBornCount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaxLifeMinutes")
                        .HasColumnType("INTEGER");

                    b.Property<TimeSpan>("Pregnancyduration")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatetdDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatetdUser")
                        .HasColumnType("TEXT");

                    b.Property<int>("WaitMinutes")
                        .HasColumnType("INTEGER");

                    b.HasKey("DimensionId");

                    b.ToTable("T_AppDimensions");
                });
#pragma warning restore 612, 618
        }
    }
}
